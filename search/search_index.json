{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"kilroy-face-discord \ud83d\udd17 kilroy face for Discord \ud83c\udfae Installing \ud83d\udd17 Using pip : pip install kilroy-face-discord Usage \ud83d\udd17 To run the face server, install the package and run the following command: kilroy-face-discord This will start the face server on port 10000 by default. Then you can communicate with the server, for example by using this package .","title":"Home"},{"location":"#kilroy-face-discord","text":"kilroy face for Discord \ud83c\udfae","title":"kilroy-face-discord"},{"location":"#installing","text":"Using pip : pip install kilroy-face-discord","title":"Installing"},{"location":"#usage","text":"To run the face server, install the package and run the following command: kilroy-face-discord This will start the face server on port 10000 by default. Then you can communicate with the server, for example by using this package .","title":"Usage"},{"location":"usage/","text":"Usage \ud83d\udd17 This package provides an interface to a Discord channel that complies with the kilroy face API. It assumes that you only want to use a single Discord channel. Prerequisites \ud83d\udd17 You need to create a Discord bot and invite it to a posting channel. You also need a second scraping channel (or the same as the posting one) where real people post messages. The bot needs to be able to read all messages in the scraping channel and send new messages to the posting channel. It also needs to be able to view the reactions for messages in both channels. After you are done, you should have a bot token and one or two channel IDs. You need to pass these to the server, either as environment variables, command line arguments or entries in a configuration file. For example, you can do this: export KILROY_FACE_DISCORD_FACE__TOKEN = \"Paste your bot token here\" export KILROY_FACE_DISCORD_FACE__SCRAPING_CHANNEL_ID = \"Paste your scraping channel ID here\" export KILROY_FACE_DISCORD_FACE__POSTING_CHANNEL_ID = \"Paste your posting channel ID here\" Running the server \ud83d\udd17 To run the server, install the package and run the following command: kilroy-face-discord This will start the face server on port 10000 by default. Then you can communicate with the server, for example by using this package .","title":"Usage"},{"location":"usage/#usage","text":"This package provides an interface to a Discord channel that complies with the kilroy face API. It assumes that you only want to use a single Discord channel.","title":"Usage"},{"location":"usage/#prerequisites","text":"You need to create a Discord bot and invite it to a posting channel. You also need a second scraping channel (or the same as the posting one) where real people post messages. The bot needs to be able to read all messages in the scraping channel and send new messages to the posting channel. It also needs to be able to view the reactions for messages in both channels. After you are done, you should have a bot token and one or two channel IDs. You need to pass these to the server, either as environment variables, command line arguments or entries in a configuration file. For example, you can do this: export KILROY_FACE_DISCORD_FACE__TOKEN = \"Paste your bot token here\" export KILROY_FACE_DISCORD_FACE__SCRAPING_CHANNEL_ID = \"Paste your scraping channel ID here\" export KILROY_FACE_DISCORD_FACE__POSTING_CHANNEL_ID = \"Paste your posting channel ID here\"","title":"Prerequisites"},{"location":"usage/#running-the-server","text":"To run the server, install the package and run the following command: kilroy-face-discord This will start the face server on port 10000 by default. Then you can communicate with the server, for example by using this package .","title":"Running the server"},{"location":"features/posters/","text":"Posters \ud83d\udd17 Posters are responsible for posting messages to Discord. All implemented posters are described below. BasicPoster \ud83d\udd17 This poster simply uses the Discord API in most straightforward way possible.","title":"Posters"},{"location":"features/posters/#posters","text":"Posters are responsible for posting messages to Discord. All implemented posters are described below.","title":"Posters"},{"location":"features/posters/#basicposter","text":"This poster simply uses the Discord API in most straightforward way possible.","title":"BasicPoster"},{"location":"features/processors/","text":"Processors \ud83d\udd17 Processors are a way to handle different types of messages. They are able to convert between internal and external representations of messages. There are multiple types of processors available, each supporting a different type of message: TextOnlyProcessor ImageOnlyProcessor TextAndImageProcessor TextOrImageProcessor TextWithOptionalImageProcessor ImageWithOptionalTextProcessor You can set the processor to use in the initial configuration, but you can't change the type of processor at runtime.","title":"Processors"},{"location":"features/processors/#processors","text":"Processors are a way to handle different types of messages. They are able to convert between internal and external representations of messages. There are multiple types of processors available, each supporting a different type of message: TextOnlyProcessor ImageOnlyProcessor TextAndImageProcessor TextOrImageProcessor TextWithOptionalImageProcessor ImageWithOptionalTextProcessor You can set the processor to use in the initial configuration, but you can't change the type of processor at runtime.","title":"Processors"},{"location":"features/restrictions/","text":"Restrictions \ud83d\udd17 Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented restrictions are listed below. ToxicityRestriction \ud83d\udd17 This restriction uses the Detoxify model to calculate the toxicity of a post. Posts with a toxicity above the configured threshold are rejected. You can configure the toxicity threshold.","title":"Restrictions"},{"location":"features/restrictions/#restrictions","text":"Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented restrictions are listed below.","title":"Restrictions"},{"location":"features/restrictions/#toxicityrestriction","text":"This restriction uses the Detoxify model to calculate the toxicity of a post. Posts with a toxicity above the configured threshold are rejected. You can configure the toxicity threshold.","title":"ToxicityRestriction"},{"location":"features/score-modifiers/","text":"Score modifiers \ud83d\udd17 Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented score modifiers are listed below. ToxicityScoreModifier \ud83d\udd17 This score modifier uses the Detoxify model to calculate the toxicity of a post. The toxicity is then used to modify the score of the post, greatly reducing the score of toxic posts. You can configure the toxicity threshold and reduction factor.","title":"Score modifiers"},{"location":"features/score-modifiers/#score-modifiers","text":"Score modifiers are a way to modify the score of a post given by the scorer. This can be useful to constraint the score to a certain range, or to reduce the score of risky posts. Their usage is optional. All implemented score modifiers are listed below.","title":"Score modifiers"},{"location":"features/score-modifiers/#toxicityscoremodifier","text":"This score modifier uses the Detoxify model to calculate the toxicity of a post. The toxicity is then used to modify the score of the post, greatly reducing the score of toxic posts. You can configure the toxicity threshold and reduction factor.","title":"ToxicityScoreModifier"},{"location":"features/scorers/","text":"Scorers \ud83d\udd17 Scorers are a way to evaluate posts. You give them a message, and they return a single number representing the score. All implemented scorers are described below. RelativeReactionsScorer \ud83d\udd17 This is probably the simplest scorer imaginable and the only one implemented. It simply counts the number of reactions on a message and divides it by the number of members in the server. So if a message has 10 reactions with sad emoji and 10 reactions with fire emoji, the score will be 20.","title":"Scorers"},{"location":"features/scorers/#scorers","text":"Scorers are a way to evaluate posts. You give them a message, and they return a single number representing the score. All implemented scorers are described below.","title":"Scorers"},{"location":"features/scorers/#relativereactionsscorer","text":"This is probably the simplest scorer imaginable and the only one implemented. It simply counts the number of reactions on a message and divides it by the number of members in the server. So if a message has 10 reactions with sad emoji and 10 reactions with fire emoji, the score will be 20.","title":"RelativeReactionsScorer"},{"location":"features/scrapers/","text":"Scrapers \ud83d\udd17 Scrapers are used to provide a stream of existing posts. They define a source of posts, and a way to retrieve them. All implemented scrapers are described below. BasicScraper \ud83d\udd17 This is the only implemented scraper. It simply retrieves the latest posts from a channel. It also excludes posts created by bots (including itself).","title":"Scrapers"},{"location":"features/scrapers/#scrapers","text":"Scrapers are used to provide a stream of existing posts. They define a source of posts, and a way to retrieve them. All implemented scrapers are described below.","title":"Scrapers"},{"location":"features/scrapers/#basicscraper","text":"This is the only implemented scraper. It simply retrieves the latest posts from a channel. It also excludes posts created by bots (including itself).","title":"BasicScraper"}]}